From 1ff679fe25083d2d813ead2f2599f30425a1af68 Mon Sep 17 00:00:00 2001
From: Matej Habrnal <mhabrnal@redhat.com>
Date: Mon, 9 Nov 2015 13:23:55 +0100
Subject: [PATCH] curl: add possibility to configure SSH keys

Related to rhbz#1261120

Signed-off-by: Matej Habrnal <mhabrnal@redhat.com>
---
 src/lib/abrt_curl.c               | 21 ++++++++++++++++++++-
 src/lib/abrt_curl.h               |  6 +++++-
 src/plugins/reporter-rhtsupport.c |  2 +-
 src/plugins/reporter-upload.c     |  2 +-
 4 files changed, 27 insertions(+), 4 deletions(-)

diff --git a/src/lib/abrt_curl.c b/src/lib/abrt_curl.c
index 5b1c562..9c23dd8 100644
--- a/src/lib/abrt_curl.c
+++ b/src/lib/abrt_curl.c
@@ -315,6 +315,12 @@ abrt_post(abrt_post_state_t *state,
         xcurl_easy_setopt_ptr(handle, CURLOPT_PASSWORD, (state->password ? state->password : ""));
     }
 
+    /* set SSH public and private keyfile if configured */
+    if (state->client_ssh_public_keyfile)
+        xcurl_easy_setopt_ptr(handle, CURLOPT_SSH_PUBLIC_KEYFILE, state->client_ssh_public_keyfile);
+    if (state->client_ssh_private_keyfile)
+        xcurl_easy_setopt_ptr(handle, CURLOPT_SSH_PRIVATE_KEYFILE, state->client_ssh_private_keyfile);
+
     if (data_size != ABRT_POST_DATA_FROMFILE_PUT)
     {
         // Do a HTTP POST. This also makes curl use
@@ -549,7 +555,7 @@ abrt_post(abrt_post_state_t *state,
 /* Unlike post_file(),
  * this function will use PUT, not POST if url is "http(s)://..."
  */
-char *upload_file(const char *url, const char *filename)
+char *upload_file(const char *url, const char *filename, map_string_t *settings)
 {
     /* we don't want to print the whole url as it may contain password
      * rhbz#856960
@@ -572,6 +578,19 @@ char *upload_file(const char *url, const char *filename)
         whole_url = xstrdup(url);
 
     abrt_post_state_t *state = new_abrt_post_state(ABRT_POST_WANT_ERROR_MSG);
+
+    if (settings != NULL)
+    {
+        /* set SSH keys */
+        state->client_ssh_public_keyfile = get_map_string_item_or_NULL(settings, "SSHPublicKey");
+        state->client_ssh_private_keyfile = get_map_string_item_or_NULL(settings, "SSHPrivateKey");
+
+        if (state->client_ssh_public_keyfile != NULL)
+            VERB3 log("Using SSH public key '%s'", state->client_ssh_public_keyfile);
+        if (state->client_ssh_private_keyfile != NULL)
+            VERB3 log("Using SSH private key '%s'", state->client_ssh_private_keyfile);
+    }
+
     abrt_post(state,
                 whole_url,
                 /*content_type:*/ "???",
diff --git a/src/lib/abrt_curl.h b/src/lib/abrt_curl.h
index e35afe1..f55090a 100644
--- a/src/lib/abrt_curl.h
+++ b/src/lib/abrt_curl.h
@@ -19,6 +19,7 @@
 #ifndef ABRT_CURL_H_
 #define ABRT_CURL_H_
 
+#include "internal_libreport.h"
 #include <curl/curl.h>
 
 #ifdef __cplusplus
@@ -37,6 +38,9 @@ typedef struct abrt_post_state {
     const char  *password;
     const char  *client_cert_path;
     const char  *client_key_path;
+    /* SSH key files */
+    const char  *client_ssh_public_keyfile;
+    const char  *client_ssh_private_keyfile;
     /* Results of POST transaction: */
     int         http_resp_code;
     /* cast from CURLcode enum.
@@ -120,7 +124,7 @@ abrt_post_file_as_form(abrt_post_state_t *state,
 }
 
 #define upload_file libreport_upload_file
-char *upload_file(const char *url, const char *filename);
+char *upload_file(const char *url, const char *filename, map_string_t *settings);
 
 #ifdef __cplusplus
 }
diff --git a/src/plugins/reporter-rhtsupport.c b/src/plugins/reporter-rhtsupport.c
index a55a580..59b8e07 100644
--- a/src/plugins/reporter-rhtsupport.c
+++ b/src/plugins/reporter-rhtsupport.c
@@ -775,7 +775,7 @@ int main(int argc, char **argv)
     {
         /* Upload tarball of -d DIR to "big file" FTP */
         /* log(_("Uploading problem data to '%s'"), bigurl); - upload_file does this */
-        remote_filename = upload_file(bigurl, tempfile);
+        remote_filename = upload_file(bigurl, tempfile, NULL);
     }
     if (remote_filename)
     {
diff --git a/src/plugins/reporter-upload.c b/src/plugins/reporter-upload.c
index 4bd12ef..1c61f13 100644
--- a/src/plugins/reporter-upload.c
+++ b/src/plugins/reporter-upload.c
@@ -133,7 +133,7 @@ static int create_and_upload_archive(
     /* Upload from /tmp to /tmp + deletion -> BAD, exclude this possibility */
     if (url && url[0] && strcmp(url, "file:///tmp/") != 0)
     {
-        char *remote_name = upload_file(url, tempfile);
+        char *remote_name = upload_file(url, tempfile, settings);
         result = (remote_name == NULL); /* error if NULL */
         free(remote_name);
         /* cleanup code will delete tempfile */
-- 
2.6.3

