From 445b36f5f1285dc00ade55e78bf2acb09dce07e9 Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <dvlasenk@redhat.com>
Date: Fri, 7 Jun 2013 13:06:01 +0200
Subject: [RHEL6 LIBREPORT PATCH 96/96] reporter-bz: make binary attachments
 have "application/octet-stream" MIME-type. rhbz#885509

This is a partial backport of commit 90bdb95ab50b6ed67f681560531e44fac17e8434

Signed-off-by: Denys Vlasenko <dvlasenk@redhat.com>
---
 src/plugins/rhbz.c | 17 +++++++++--------
 src/plugins/rhbz.h | 13 +++++++------
 2 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/src/plugins/rhbz.c b/src/plugins/rhbz.c
index 7d1c991..359c15a 100644
--- a/src/plugins/rhbz.c
+++ b/src/plugins/rhbz.c
@@ -707,7 +707,7 @@ int rhbz_attach_blob(struct abrt_xmlrpc *ax, const char *filename,
                              bug_id,
                              "description", fn,
                              "filename", filename,
-                             "contenttype", "text/plain",
+                             "contenttype", (flags & RHBZ_BINARY_ATTACHMENT) ? "application/octet-stream" : "text/plain",
                              "data", encoded64,
                              "nomail", nomail_notify);
 
@@ -733,19 +733,20 @@ int rhbz_attach_fd(struct abrt_xmlrpc *ax, const char *filename,
         return -1;
     }
 
-    /* bugzilla limit is 20MB */
-    /* attaching more then bugzilla's limit could cause that xmlrpc-c fails
+    /* bugzilla limit is 20MB
+     * attaching more then bugzilla's limit could cause that xmlrpc-c fails
      * somewhere inside itself.
-     * https://bugzilla.redhat.com/show_bug.cgi?id=741980 */
-    #define _20MB (20 * 1024 * 1024)
-
-    if (size >= _20MB )
+     * https://bugzilla.redhat.com/show_bug.cgi?id=741980
+     */
+    if (size >= (20 * 1024 * 1024))
     {
         error_msg("Can't upload '%s', it's too large (%llu bytes)", filename, (long long)size);
         return -1;
     }
     lseek(fd, 0, SEEK_SET);
 
+//TODO: need to have a method of attaching huge files (IOW: 1Gb read isn't good).
+
     char *data = xmalloc(size + 1);
     ssize_t r = full_read(fd, data, size);
     if (r < 0)
@@ -818,7 +819,7 @@ int rhbz_attach_files(struct abrt_xmlrpc *ax, const char *bug_id,
                 close(fd);
                 continue;
             }
-            rhbz_attach_fd(ax, name, bug_id, fd, flags);
+            rhbz_attach_fd(ax, name, bug_id, fd, flags | RHBZ_BINARY_ATTACHMENT);
             close(fd);
         }
     }
diff --git a/src/plugins/rhbz.h b/src/plugins/rhbz.h
index a945677..10c37bc 100644
--- a/src/plugins/rhbz.h
+++ b/src/plugins/rhbz.h
@@ -31,12 +31,13 @@ extern "C" {
 #endif
 
 enum {
-    RHBZ_MANDATORY_MEMB = (1 << 0),
-    RHBZ_READ_STR       = (1 << 1),
-    RHBZ_READ_INT       = (1 << 2),
-    RHBZ_NOMAIL_NOTIFY  = (1 << 3),
-    RHBZ_PRIVATE        = (1 << 4),
-    RHBZ_ATTACH_BINARY_FILES = (1 << 5),
+    RHBZ_MANDATORY_MEMB      = (1 << 0),
+    RHBZ_READ_STR            = (1 << 1),
+    RHBZ_READ_INT            = (1 << 2),
+    RHBZ_NOMAIL_NOTIFY       = (1 << 3),
+    RHBZ_PRIVATE             = (1 << 4),
+    RHBZ_BINARY_ATTACHMENT   = (1 << 5),
+    RHBZ_ATTACH_BINARY_FILES = (1 << 6),
 };
 
 #define IS_MANDATORY(flags) ((flags) & RHBZ_MANDATORY_MEMB)
-- 
1.8.2.1

