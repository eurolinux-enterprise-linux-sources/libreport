From 14fe62d2768a46d8ce501171e2489f191fb29792 Mon Sep 17 00:00:00 2001
From: Matej Habrnal <mhabrnal@redhat.com>
Date: Wed, 16 Dec 2015 17:34:30 +0100
Subject: [PATCH] dd: make function uid_in_group() public

Related to rhbz#1256705

Signed-off-by: Matej Habrnal <mhabrnal@redhat.com>
---
 src/include/internal_libreport.h |    9 +++++++++
 src/lib/dump_dir.c               |    4 +---
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/include/internal_libreport.h b/src/include/internal_libreport.h
index 038cb33..3dd9660 100644
--- a/src/include/internal_libreport.h
+++ b/src/include/internal_libreport.h
@@ -681,6 +681,15 @@ struct dump_dir *steal_directory(const char *base_dir, const char *dump_dir_name
 #define make_dir_recursive libreport_make_dir_recursive
 bool make_dir_recursive(char *dir, mode_t dir_mode);
 
+/* Resolves if the given user is in given group
+ *
+ * @param uid user ID
+ * @param gid group ID
+ * @returns TRUE in case the user is in the group otherwise returns FALSE
+ */
+#define uid_in_group libreport_uid_in_group
+bool uid_in_group(uid_t uid, gid_t gid);
+
 // Files bigger than this are never considered to be text.
 //
 // Started at 64k limit. But _some_ limit is necessary:
diff --git a/src/lib/dump_dir.c b/src/lib/dump_dir.c
index 0eb0977..7fa8f2f 100644
--- a/src/lib/dump_dir.c
+++ b/src/lib/dump_dir.c
@@ -1145,8 +1145,7 @@ void delete_dump_dir(const char *dirname)
     }
 }
 
-#if DUMP_DIR_OWNED_BY_USER == 0
-static bool uid_in_group(uid_t uid, gid_t gid)
+bool uid_in_group(uid_t uid, gid_t gid)
 {
     char **tmp;
     struct passwd *pwd = getpwuid(uid);
@@ -1173,7 +1172,6 @@ static bool uid_in_group(uid_t uid, gid_t gid)
     VERB2 log("user %s DOESN'T belong to group: %s",  pwd->pw_name, grp->gr_name);
     return FALSE;
 }
-#endif
 
 enum {
     DD_STAT_ACCESSIBLE_BY_UID = 1,
-- 
1.7.1

