From b8742222d8db9755c9ec7f96b8d4b65d88599ba4 Mon Sep 17 00:00:00 2001
From: Nikola Pajkovsky <npajkovs@redhat.com>
Date: Thu, 24 May 2012 13:20:41 +0200
Subject: [PATCH 29/53] strbuf: fix conditional jump or move depends on
 uninitialised value(s)

 Conditional jump or move depends on uninitialised value(s)
    at 0x59808EA: vfprintf (in /usr/lib64/libc-2.15.so)
    by 0x59AB533: vasprintf (in /usr/lib64/libc-2.15.so)
    by 0x55242CA: verror_msg_helper (logging.c:45)
    by 0x5524556: libreport_log_msg (logging.c:97)
    by 0x40245C: main (abrt-bodhi.c:539)

 Conditional jump or move depends on uninitialised value(s)
    at 0x59808EA: vfprintf (in /usr/lib64/libc-2.15.so)
    by 0x5987A38: printf (in /usr/lib64/libc-2.15.so)
    by 0x552C596: libreport_ask_yes_no (client.c:61)
    by 0x402465: main (abrt-bodhi.c:542)

Signed-off-by: Nikola Pajkovsky <npajkovs@redhat.com>
---
 src/lib/strbuf.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/lib/strbuf.c b/src/lib/strbuf.c
index bb36008..7036272 100644
--- a/src/lib/strbuf.c
+++ b/src/lib/strbuf.c
@@ -166,7 +166,7 @@ struct strbuf *strbuf_prepend_str(struct strbuf *strbuf, const char *str)
     unsigned inc_len = strlen(str);
     strbuf_grow(strbuf, inc_len);
     assert(strbuf->len < strbuf->alloc);
-    memmove(strbuf->buf + inc_len, strbuf->buf, cur_len);
+    memmove(strbuf->buf + inc_len, strbuf->buf, cur_len + 1);
     memcpy(strbuf->buf, str, inc_len);
     return strbuf;
 }
-- 
1.7.11.2

