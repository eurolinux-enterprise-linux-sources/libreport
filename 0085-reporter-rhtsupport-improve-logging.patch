From 16cf08dc77f2410ce08d54bed890cd0a283ac4ae Mon Sep 17 00:00:00 2001
From: Denys Vlasenko <dvlasenk@redhat.com>
Date: Wed, 27 Mar 2013 13:03:05 +0100
Subject: [RHEL6 LIBREPORT PATCH 85/94] reporter-rhtsupport: improve logging

While testing previous patch, I got error messages
which were not very helpful.
Lets add URL to them.

Signed-off-by: Denys Vlasenko <dvlasenk@redhat.com>
Signed-off-by: Jiri Moskovcak <jmoskovc@redhat.com>
---
 src/plugins/abrt_rh_support.c | 53 ++++++++++++++++++++++++++-----------------
 1 file changed, 32 insertions(+), 21 deletions(-)

diff --git a/src/plugins/abrt_rh_support.c b/src/plugins/abrt_rh_support.c
index adebcc3..045e04c 100644
--- a/src/plugins/abrt_rh_support.c
+++ b/src/plugins/abrt_rh_support.c
@@ -357,17 +357,20 @@ post_case_to_url(const char* url,
         errmsg = post_state->curl_error_msg;
         if (errmsg && errmsg[0])
         {
-            result->msg = xasprintf(_("error in case creation: %s"), errmsg);
+            result->msg = xasprintf(_("Error in case creation at '%s': %s"),
+                    url, errmsg);
         }
         else
         {
             errmsg = post_state->body;
             if (errmsg && errmsg[0])
-                result->msg = xasprintf(_("error in case creation, HTTP code: %d, server says: '%s'"),
-                        post_state->http_resp_code, errmsg);
+                result->msg = xasprintf(_("Error in case creation at '%s',"
+                        " HTTP code: %d, server says: '%s'"),
+                        url, post_state->http_resp_code, errmsg);
             else
-                result->msg = xasprintf(_("error in case creation, HTTP code: %d"),
-                        post_state->http_resp_code);
+                result->msg = xasprintf(_("Error in case creation at '%s',"
+                        " HTTP code: %d"),
+                        url, post_state->http_resp_code);
         }
         break;
 
@@ -408,17 +411,18 @@ create_new_case(const char* base_url,
                 description,
                 component
     );
-    free(url);
 
     if (!result->error && !result->url)
     {
         /* Case Creation returned valid code, but no location */
         result->error = -1;
         free(result->msg);
-        result->msg = xasprintf(_("Error in case creation: no Location URL, HTTP code: %d"),
-                result->http_resp_code
+        result->msg = xasprintf(_("Error in case creation at '%s':"
+                " no Location URL, HTTP code: %d"),
+                url, result->http_resp_code
         );
     }
+    free(url);
 
     return result;
 }
@@ -517,7 +521,8 @@ post_comment_to_url(const char *url,
         errmsg = post_state->curl_error_msg;
         if (errmsg && errmsg[0])
         {
-            result->msg = xasprintf(_("Error in comment creation: %s"), errmsg);
+            result->msg = xasprintf(_("Error in comment creation at '%s': %s"),
+                        url, errmsg);
         }
         else
         {
@@ -525,11 +530,13 @@ post_comment_to_url(const char *url,
             if (!errmsg)
                 errmsg = post_state->body;
             if (errmsg && errmsg[0])
-                result->msg = xasprintf(_("Error in comment creation, HTTP code: %d, server says: '%s'"),
-                        post_state->http_resp_code, errmsg);
+                result->msg = xasprintf(_("Error in comment creation at '%s',"
+                        " HTTP code: %d, server says: '%s'"),
+                        url, post_state->http_resp_code, errmsg);
             else
-                result->msg = xasprintf(_("Error in comment creation, HTTP code: %d"),
-                        post_state->http_resp_code);
+                result->msg = xasprintf(_("Error in comment creation at '%s',"
+                        " HTTP code: %d"),
+                        url, post_state->http_resp_code);
         }
         break;
 
@@ -567,17 +574,18 @@ add_comment_to_case(const char* base_url,
                 (const char **) NULL, //text_plain_header,
                 comment_text
     );
-    free(url);
 
     if (!result->error && !result->url)
     {
         /* Creation returned valid code, but no location */
         result->error = -1;
         free(result->msg);
-        result->msg = xasprintf(_("Error in comment creation: no Location URL, HTTP code: %d"),
-                result->http_resp_code
+        result->msg = xasprintf(_("Error in comment creation at '%s':"
+                " no Location URL, HTTP code: %d"),
+                url, result->http_resp_code
         );
     }
+    free(url);
 
     return result;
 }
@@ -653,17 +661,20 @@ post_file_to_url(const char* url,
         errmsg = atch_state->curl_error_msg;
         if (errmsg && errmsg[0])
         {
-            result->msg = xasprintf("error in file upload: %s", errmsg);
+            result->msg = xasprintf("Error in file upload at '%s': %s",
+                    url, errmsg);
         }
         else
         {
             errmsg = atch_state->body;
             if (errmsg && errmsg[0])
-                result->msg = xasprintf("error in file upload, HTTP code: %d, server says: '%s'",
-                        atch_state->http_resp_code, errmsg);
+                result->msg = xasprintf("Error in file upload at '%s',"
+                        " HTTP code: %d, server says: '%s'",
+                        url, atch_state->http_resp_code, errmsg);
             else
-                result->msg = xasprintf("error in file upload, HTTP code: %d",
-                        atch_state->http_resp_code);
+                result->msg = xasprintf("Error in file upload at '%s',"
+                        " HTTP code: %d",
+                        url, atch_state->http_resp_code);
         }
         break;
 
-- 
1.8.2.1

