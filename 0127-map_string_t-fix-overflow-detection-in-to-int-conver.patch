From f4ebf44bcecd1ffa60e3ceb45f5afc6e960a7244 Mon Sep 17 00:00:00 2001
From: Jakub Filak <jfilak@redhat.com>
Date: Mon, 6 Jan 2014 16:08:55 +0100
Subject: [LIBREPORT PATCH] map_string_t: fix overflow detection in "to int
 conversion"

LONG_MAX == INT_MAX on i386

Fixes the broken i386 build

Signed-off-by: Jakub Filak <jfilak@redhat.com>
---
 src/lib/abrt_types.c     | 13 +++++++++----
 tests/libreport_types.at |  6 +++---
 2 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/src/lib/abrt_types.c b/src/lib/abrt_types.c
index aa9e6dd..41aa61f 100644
--- a/src/lib/abrt_types.c
+++ b/src/lib/abrt_types.c
@@ -83,10 +83,15 @@ int try_get_map_string_item_as_int(map_string_t *ms, const char *key, int *value
     long raw_value = strtol(option, &endptr, 10);
 
     /* Check for various possible errors */
-    if ((raw_value > INT_MAX || raw_value < INT_MIN)
-            || (errno != 0 && raw_value == 0)
-            || (endptr == option) /* empty */
-            || (endptr[0] != '\0') /* trailing non-digits */)
+    if (raw_value > INT_MAX || raw_value < INT_MIN || errno == ERANGE)
+    {
+        log("Value of option '%s' is out of integer range", key);
+        return 0;
+    }
+
+    if ((errno != 0 && raw_value == 0)
+        || (endptr == option) /* empty */
+        || (endptr[0] != '\0') /* trailing non-digits */)
     {
         log("Value of option '%s' is not an integer", key);
         return 0;
diff --git a/tests/libreport_types.at b/tests/libreport_types.at
index bc11eea..94e24b0 100644
--- a/tests/libreport_types.at
+++ b/tests/libreport_types.at
@@ -133,9 +133,9 @@ int main(int argc, char **argv)
         assert(retval == 69 || !"Modifies int(69) on '777foo'");
 
                                                  /*0123456789ABCDEF*/
-        replace_map_string_item(map, xstrdup(key), xstrdup("7777777777777777"));
-        assert(!try_get_map_string_item_as_int(map, key, &retval) || !"Converts '7777777777777777' to number");
-        assert(retval == 69 || !"Modifies int(69) on '7777777777777777'");
+        replace_map_string_item(map, xstrdup(key), xstrdup("77777777777777777777777777777777"));
+        assert(!try_get_map_string_item_as_int(map, key, &retval) || !"Converts '77777777777777777777777777777777' to number");
+        assert(retval == 69 || !"Modifies int(69) on '77777777777777777777777777777777'");
 
         free_map_string(map);
     }
-- 
1.8.3.1

